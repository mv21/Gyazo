#!/usr/bin/env ruby

require 'net/http'
require 'openssl'

# capture png file
tmpfile = "/tmp/image_upload#{$$}.png"
imagefile = ARGV[1]

if imagefile && File.exist?(imagefile) then
	system "sips -s format png \"#{imagefile}\" --out \"#{tmpfile}\""
else
	system "screencapture -i \"#{tmpfile}\""
	if File.exist?(tmpfile) then
		system "sips -d profile --deleteColorManagementProperties \"#{tmpfile}\""
		dpiWidth			= `sips -g dpiWidth "#{tmpfile}" | awk '/:/ {print $2}'`
		dpiHeight			= `sips -g dpiHeight "#{tmpfile}" | awk '/:/ {print $2}'`
		pixelWidth		= `sips -g pixelWidth "#{tmpfile}" | awk '/:/ {print $2}'`
		pixelHeight		= `sips -g pixelHeight "#{tmpfile}" | awk '/:/ {print $2}'`
		if (dpiWidth.to_f > 72.0 and dpiHeight.to_f > 72.0) then
				width	=	pixelWidth.to_f * 72.0 / dpiWidth.to_f
				height	=	pixelHeight.to_f* 72.0 / dpiHeight.to_f
				system "sips -s dpiWidth 72 -s dpiHeight 72 -z #{height} #{width} \"#{tmpfile}\""
		end
	end
end

if !File.exist?(tmpfile) then
	exit
end

imagedata = File.read(tmpfile)
File.delete(tmpfile)

# upload
boundary = '----BOUNDARYBOUNDARY----'

HOST	= 'utils.michaelv.co'
PATH		= '/img/'
UA 		= 'MVGyazoMac/1.0.1'

data = <<EOF
--#{boundary}\r
content-disposition: form-data; name="imagedata"; filename="img-upload"\r
\r
#{imagedata}\r
--#{boundary}--\r
EOF

header ={
	'Content-Length' => data.length.to_s,
	'Content-type' => "multipart/form-data; boundary=#{boundary}",
	'User-Agent' => UA
}

Net::HTTP.start(HOST, 443, :use_ssl => true){|https|

	res = https.post(PATH,data,header)
	url = res.response.body

	#Copy link to clipboard
	IO.popen("pbcopy","r+"){|io|
		io.write url
		io.close
	}

	#Open link in browser
	IO.popen(["open", url]) {|open_io|
		open_io.close
	}
}
